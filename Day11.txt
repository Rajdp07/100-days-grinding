package JavaGrinding.Day11;
import java.util.*;
//Duplicate elements in a string in O(n) complexity.........
public class App 
{
    public static int App( String str )
    {
    	HashSet<Character> set = new HashSet<>();
    	for(int i=0;i<str.length();i++) {
    		if(set.contains(str.charAt(i))) {
    			return i;
    		}else {
    			set.add(str.charAt(i));
    		}
    	}
    	return -1;
        //System.out.println( "Hello World!" );
    }
}

class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            int diff=target-nums[i];
            if(map.containsKey(diff)){
                return new int[]{map.get(diff),i};
            }else{
                map.put(nums[i],i);
            }
        }
        return new int[]{};
        
    }


